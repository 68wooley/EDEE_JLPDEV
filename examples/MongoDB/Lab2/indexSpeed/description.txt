This runs two queries on the same large data set.

One has an index that can be used, and the other does not. They return
almost the same number of documents.

It uses find().explain() with the 'executionStats' option, rather than
find(). This will cause MongoDB to select an execution plan, run the
winning plan, and include execution metrics from the return, including
the execution time and number of documents returned. The explain
metrics exclude any network overhead.

After an initial call to the webservice, which may may be slower due
to data not being loaded from disk to in-memory cache, an indexed query 
will be a fairly constant speed.

A collection scan (no index) will place a lot of load on the server,
proportaional to the number of callers so it may be very slow in a 
large class, be patient.
